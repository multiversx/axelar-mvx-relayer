syntax = "proto3";
import "google/api/annotations.proto";

service Relayer{
  rpc Verify(stream VerifyRequest) returns (stream VerifyResponse);
  rpc GetPayload(GetPayloadRequest) returns (GetPayloadResponse) {
    option (google.api.http) = {
      get: "/v1beta1/payload/{hash}"
    };
  }
  rpc SubscribeToApprovals(SubscribeToApprovalsRequest) returns (stream SubscribeToApprovalsResponse);
  rpc SubscribeToWasmEvents(SubscribeToWasmEventsRequest) returns (stream SubscribeToWasmEventsResponse);
  rpc Broadcast(BroadcastRequest) returns (BroadcastResponse) {
    option (google.api.http) = {
      post: "/v1beta1/broadcast"
      body: "*"
    };
  }
}

message Message{
  string id = 1; // the unique identifier with which the message can be looked up on the source chain
  string source_chain = 2;
  string source_address= 3;
  string destination_chain = 4;
  string destination_address = 5;
  bytes payload = 6;
}

message GetPayloadRequest{
  bytes hash = 1;
}

message GetPayloadResponse{
  bytes payload = 1;
}

message SubscribeToApprovalsRequest{
  string chain = 1;
  optional uint64 start_height = 2; // can be used to replay events
}

message SubscribeToApprovalsResponse{
  string chain = 1;
  bytes execute_data = 2;
  uint64 block_height = 3;
}

message VerifyRequest{
  Message message = 1;
}

message VerifyResponse{
  Message message = 1;
  bool success = 3;
}

message SubscribeToWasmEventsRequest{
  optional uint64 start_height = 1;
}

message SubscribeToWasmEventsResponse{
  string type = 1;
  repeated Attribute attributes = 2;
  uint64 height = 3;
}

message Attribute{
  string key = 1;
  string value = 2;
}

message BroadcastRequest {
  string address = 1;
  bytes payload = 2;
}

message BroadcastResponse {
  Receipt receipt = 1;
}

message Receipt {
  string error = 1;
  int64 block_height = 2;
  int64 gas_used = 3;
  int64 gas_wanted = 4;
  string tx_hash = 5;
  string tx_response_log = 6;
}
